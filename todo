1) Multiline block entering:
    Prompt could indicate indentation level:

    $ if foo:
    >     for bar in baz:
    >>         echo something
    >>                      
    >>
    $ 

    Empty lines should be allowed in blocks of input, to make scripts more 
    legible; two empty lines should demarcate the end of a block.

2) Apply separation and selection logic to strings
    e.g., 
    $ echo "hello world!"[0]
    hello

3) Filename Expansion
    a) Complete documentation (so we know what we want)
    b) Implement

4) Implement `exec` builtin: Replace current (shell) process with command

5) `let` builtin should accept either 'name = value' or 'name=value'
    a) Maybe 'load' builtin, to read name=value pairs from a file? 

6) "Arrays" module:  Implement functions for push, pop, append, etcetera?

7) `let var = val` ?  
    Bash has a special command for this, `readonly`
        ...But, such a line is useless if later on you can simply call 
            `let --make-mut var`
        So, it must be the case that, if a variable *isn't* declared mutable,
        then it's forever immutable.  
        More, then you would have lines of the form,
            `let var = {var}`
        setting `var` immutable.  

8)  We don't want there to be two variables with the same name-- so `let` should
    forbid the creation of 'local' variables with the same names as environment
    variables-- AND expansion should look in environment first.
